/**
 * Generated from file:/C:/Users/fekete.agnes/workspace/workspace_viatra_plugin_test/hu.prolan.viatra.query/src/hu/prolan/viatra/query/TestQueryClass.vql
 */
package hu.prolan.viatra.query;

import hu.prolan.viatra.query.WebMatcher;
import hu.prolan.viatra.query.util.WebQuerySpecification;
import org.eclipse.viatra.query.runtime.api.ViatraQueryEngine;
import org.eclipse.viatra.query.runtime.api.impl.BaseGeneratedPatternGroup;
import org.eclipse.viatra.query.runtime.exception.ViatraQueryException;

/**
 * A pattern group formed of all public patterns defined in TestQueryClass.vql.
 * 
 * <p>Use the static instance as any {@link org.eclipse.viatra.query.runtime.api.IPatternGroup}, to conveniently prepare
 * a VIATRA Query engine for matching all patterns originally defined in file TestQueryClass.vql,
 * in order to achieve better performance than one-by-one on-demand matcher initialization.
 * 
 * <p> From package hu.prolan.viatra.query, the group contains the definition of the following patterns: <ul>
 * <li>web</li>
 * </ul>
 * 
 * @see IPatternGroup
 * 
 */
@SuppressWarnings("all")
public final class TestQueryClass extends BaseGeneratedPatternGroup {
  /**
   * Access the pattern group.
   * 
   * @return the singleton instance of the group
   * @throws ViatraQueryException if there was an error loading the generated code of pattern specifications
   * 
   */
  public static TestQueryClass instance() throws ViatraQueryException {
    if (INSTANCE == null) {
        INSTANCE = new TestQueryClass();
    }
    return INSTANCE;
  }
  
  private static TestQueryClass INSTANCE;
  
  private TestQueryClass() throws ViatraQueryException {
    querySpecifications.add(WebQuerySpecification.instance());
  }
  
  public WebQuerySpecification getWeb() throws ViatraQueryException {
    return WebQuerySpecification.instance();
  }
  
  public WebMatcher getWeb(final ViatraQueryEngine engine) throws ViatraQueryException {
    return WebMatcher.on(engine);
  }
}
